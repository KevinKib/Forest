unit gestionDeCombat_UNIT;

interface

uses fonctionsGlobales_UNIT, moduleGestionEcran_UNIT, System.SysUtils, initialisationVariables_UNIT;

// Déclaration des variables de texte dédiées à l'unité
var
  texteTitre,
  texteBarres,
  texteListeSoldats,
  texteSoldatsJoueur,
  texteCanonsJoueur,
  textePointsRecrutement
  : String;

const
  PRIX_RECRUTEMENT_SOLDAT : Integer = 1;
  PRIX_RECRUTEMENT_CANON  : Integer = 5;

procedure gestionDeCombat(var game: TGame; var civ: TCivilisation; var combat: TCombat);

implementation

  procedure recruterSoldat(var civ: TCivilisation; var combat: TCombat);
  begin
    if (civ.PointsRecrutement >= PRIX_RECRUTEMENT_SOLDAT) and (civ.lvlCaserne > 0) then
      begin
        combat.SoldatsDispo := combat.SoldatsDispo + 1;
        civ.PointsRecrutement := civ.PointsRecrutement - PRIX_RECRUTEMENT_SOLDAT;
      end
    else if ((civ.PointsRecrutement <= 0) and (civ.lvlCaserne > 0)) then
      combat.texteRecrutement := 'Pas assez de points de recrutement.'

    else if ((civ.lvlCaserne <= 0) and (civ.PointsRecrutement > 0)) then
      combat.texteRecrutement := 'Il faut construire une caserne !'

    else if ((civ.lvlCaserne <= 0) and (civ.PointsRecrutement <= 0)) then
      combat.texteRecrutement := 'Pas assez de points, aucune caserne disponible';


  end;

  procedure recruterCanon(var civ: TCivilisation; var combat: TCombat);
  begin
   if ((civ.PointsRecrutement >= PRIX_RECRUTEMENT_CANON) and (civ.lvlCaserne > 0) and (civ.lvlMine > 0)) then
     begin
       combat.CanonsDispo := combat.CanonsDispo + 1;
       civ.PointsRecrutement := civ.PointsRecrutement - PRIX_RECRUTEMENT_CANON;
     end

   else if ((civ.PointsRecrutement <= 0) and (civ.lvlCaserne > 0) and (civ.lvlMine > 0))then
    combat.texteRecrutement := 'Pas assez de points de recrutement.'

   else if ((civ.lvlCaserne <= 0) and (civ.PointsRecrutement > 1) and (civ.lvlMine > 0))   then
    combat.texteRecrutement := 'Il faut construire une caserne! '

   else if ((civ.lvlCaserne > 0) and (civ.PointsRecrutement > 1) and (civ.lvlMine <= 0))   then
    combat.texteRecrutement := 'Il faut construire une mine ! '

   else if ((civ.lvlCaserne <= 0) and (civ.PointsRecrutement <= 1) and (civ.lvlMine <= 0)) then
    combat.texteRecrutement := 'Pas assez de points, ni caserne, ni mine disponible';
  end;

  procedure attaquerCampBarbare(adversaire: String; var game: TGame; var civ: TCivilisation; var combat: TCombat);
  begin
    if combat.SoldatsDispo > 0 then
      begin
        if      adversaire = 'Petit' then combat.Seed := 1
        else if adversaire = 'Grand' then combat.Seed := 2;

        game.Screen := 'ecranDeCombat';
      end
    else combat.texteRecrutement := 'Vous ne pouvez attaquer sans soldat.';
  end;

  procedure gestionDeCombat_afficherTexte(civ: TCivilisation; combat: TCombat);
  begin
    texteTitre              := 'Ecran de gestion militaire';
    texteBarres             := '--------------------------------';
    texteListeSoldats       := 'Liste de troupes disponibles : ';
    texteSoldatsJoueur      := '- Soldats disponibles : '+IntToStr(combat.SoldatsDispo);
    texteCanonsJoueur       := '- Canons disponibles  : '+IntToStr(combat.CanonsDispo);
    textePointsRecrutement  := 'Nombre de points de recrutements : '+IntToStr(civ.PointsRecrutement);

    ecrireAuCentre(6,texteTitre);
    ecrireAuCentre(7,texteBarres);
    ecrireEnPositionXY(4,9,texteListeSoldats);
    ecrireEnPositionXY(4,10,texteBarres);
    ecrireEnPositionXY(5,12,texteSoldatsJoueur);
    ecrireEnPositionXY(5,13,texteCanonsJoueur);
    ecrireEnPositionXY(4,15,textePointsRecrutement);
  end;

  procedure gestionDeCombat(var game: TGame; var civ: TCivilisation; var combat: TCombat);
  begin

    // Header
      displayHeader(civ.texteCivilisation, civ.texteTour, civ.Nom, game.NbTour);

    // Affichage
      gestionDeCombat_afficherTexte(civ, combat);

    // Affichage des réponses du joueur
      ecrireEnPositionXY(4,21,'1 - Recruter un soldat');
      ecrireEnPositionXY(4,22,'2 - Recruter un canon');
      ecrireEnPositionXY(4,24,'4 - Attaquer un petit camp barbare');
      ecrireEnPositionXY(4,25,'5 - Attaquer un grand camp barbare');
      ecrireEnPositionXY(4,27,'0 - Retour au menu principal');
      ecrireAuCentre(27,combat.texteRecrutement);

    // Affichage du cadre de réponse
      dessinerCadreXY(95,26,105,28, simple, White, Black);
      deplacerCurseurXY(100,27);
      readln(game.Input);

    // Lecture des entrées du joueur
      case game.Input of
        1: recruterSoldat(civ,combat);
        2: recruterCanon (civ,combat);
        4: attaquerCampBarbare('Petit',game, civ, combat);
        5: attaquerCampBarbare('Grand',game, civ, combat);
        0: game.Screen := 'ecranPrincipal';
      end;

    effacerEcran();
  end;


end.
